memberSearchIndex = [{"p":"neural_network.components","c":"Network","l":"activateOutputLayer(List<Double>)","u":"activateOutputLayer(java.util.List)"},{"p":"neural_network.components","c":"Neuron","l":"addBiasGradient(double)"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"addData(List<List<Double>>)","u":"addData(java.util.List)"},{"p":"neural_network.components","c":"Edge","l":"addLossGradient(double)"},{"p":"neural_network.components","c":"Network","l":"backPropagateBias(Neuron)","u":"backPropagateBias(neural_network.components.Neuron)"},{"p":"neural_network.components","c":"Network","l":"backPropagateWeight(Edge)","u":"backPropagateWeight(neural_network.components.Edge)"},{"p":"neural_network.functions","c":"TransferFunction","l":"bindBias(double)"},{"p":"neural_network.functions","c":"TransferFunction","l":"bindWeights(List<Double>)","u":"bindWeights(java.util.List)"},{"p":"neural_network.components","c":"Network","l":"calculatePreActivatedValue(Layer, Neuron)","u":"calculatePreActivatedValue(neural_network.components.Layer,neural_network.components.Neuron)"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"call()"},{"p":"neural_network.util","c":"Partitioner","l":"call()"},{"p":"neural_network.util","c":"WeightedPartitioner","l":"call()"},{"p":"neural_network.functions","c":"LeakyReLU","l":"call(Double)","u":"call(java.lang.Double)"},{"p":"neural_network.functions","c":"Sigmoid","l":"call(Double)","u":"call(java.lang.Double)"},{"p":"neural_network.functions","c":"Softmax","l":"call(Double)","u":"call(java.lang.Double)"},{"p":"neural_network.functions","c":"MSELoss","l":"call(double, double)","u":"call(double,double)"},{"p":"neural_network.functions","c":"TransferFunction","l":"call(List<Double>)","u":"call(java.util.List)"},{"p":"neural_network.functions","c":"CrossEntropyLoss","l":"call(List<Double>, int)","u":"call(java.util.List,int)"},{"p":"neural_network.functions","c":"Activator","l":"call(T)"},{"p":"neural_network.components","c":"Neuron","l":"clearBiasGradients()"},{"p":"neural_network.components","c":"Edge","l":"clearLossGradients()"},{"p":"neural_network.functions","c":"CrossEntropyLoss","l":"CrossEntropyLoss()","u":"%3Cinit%3E()"},{"p":"neural_network.util","c":"DataSplitter","l":"csvToMap()"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"DataGenerator(Method, int)","u":"%3Cinit%3E(java.lang.reflect.Method,int)"},{"p":"neural_network.util","c":"DataSplitter","l":"DataSplitter(String, List<Integer>)","u":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"neural_network.components","c":"Edge","l":"Edge(Neuron, Neuron)","u":"%3Cinit%3E(neural_network.components.Neuron,neural_network.components.Neuron)"},{"p":"neural_network.components","c":"Network","l":"forwardPassOneDatapoint(List<Double>)","u":"forwardPassOneDatapoint(java.util.List)"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"generateData()"},{"p":"neural_network.data_generators","c":"NormalDataGenerator","l":"generateData()"},{"p":"neural_network.data_generators","c":"UniformDataGenerator","l":"generateData()"},{"p":"neural_network.util","c":"Header","l":"getAllHeaders()"},{"p":"neural_network.components","c":"Neuron","l":"getBias()"},{"p":"neural_network.components","c":"Neuron","l":"getBiasGradients()"},{"p":"neural_network.util","c":"WeightedPartitioner","l":"getClassMap()"},{"p":"neural_network.util","c":"DataSplitter","l":"getCsvFormat()"},{"p":"neural_network.components","c":"Edge","l":"getDelta()"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"getDimensions()"},{"p":"neural_network.util","c":"Header","l":"getDimensions()"},{"p":"neural_network.components","c":"Network","l":"getEdges()"},{"p":"neural_network.util","c":"Header","l":"getHeader(String)","u":"getHeader(java.lang.String)"},{"p":"neural_network.components","c":"Edge","l":"getId()"},{"p":"neural_network.components","c":"Layer","l":"getId()"},{"p":"neural_network.components","c":"Neuron","l":"getId()"},{"p":"neural_network.util","c":"Header","l":"getInitialHeaders()"},{"p":"neural_network.components","c":"Network","l":"getLayers()"},{"p":"neural_network.functions","c":"LeakyReLU","l":"getLeak()"},{"p":"neural_network.components","c":"Edge","l":"getLeftNeuron()"},{"p":"neural_network.components","c":"Edge","l":"getLossGradients()"},{"p":"neural_network.components","c":"Network","l":"getNeuronCounts()"},{"p":"neural_network.components","c":"Layer","l":"getNeurons()"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"getNumDatapoints()"},{"p":"neural_network.util","c":"Partitioner","l":"getNumInts()"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"getPrinter()"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"getRandom()"},{"p":"neural_network.util","c":"Partitioner","l":"getRandom()"},{"p":"neural_network.components","c":"Edge","l":"getRightNeuron()"},{"p":"neural_network.util","c":"Partitioner","l":"getSetSize()"},{"p":"neural_network.util","c":"DataSplitter","l":"getSubDf(int, int)","u":"getSubDf(int,int)"},{"p":"neural_network.components","c":"Neuron","l":"getValue()"},{"p":"neural_network.components","c":"Edge","l":"getVelocity()"},{"p":"neural_network.components","c":"Edge","l":"getWeight()"},{"p":"neural_network.functions","c":"LeakyReLU","l":"gradient(Double)","u":"gradient(java.lang.Double)"},{"p":"neural_network.functions","c":"Sigmoid","l":"gradient(Double)","u":"gradient(java.lang.Double)"},{"p":"neural_network.functions","c":"Softmax","l":"gradient(Double)","u":"gradient(java.lang.Double)"},{"p":"neural_network.functions","c":"MSELoss","l":"gradient(double, double)","u":"gradient(double,double)"},{"p":"neural_network.functions","c":"TransferFunction","l":"gradient(List<Double>)","u":"gradient(java.util.List)"},{"p":"neural_network.functions","c":"Activator","l":"gradient(T)"},{"p":"neural_network.components","c":"Network","l":"isRegressor()"},{"p":"neural_network.components","c":"Layer","l":"Layer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"neural_network.functions","c":"LeakyReLU","l":"LeakyReLU()","u":"%3Cinit%3E()"},{"p":"neural_network.functions","c":"LeakyReLU","l":"LeakyReLU(double)","u":"%3Cinit%3E(double)"},{"p":"neural_network.functions","c":"MSELoss","l":"MSELoss()","u":"%3Cinit%3E()"},{"p":"neural_network.components","c":"Network","l":"Network(int, int, List<Integer>)","u":"%3Cinit%3E(int,int,java.util.List)"},{"p":"neural_network.components","c":"Network","l":"Network(int, int, List<Integer>, int, double, double)","u":"%3Cinit%3E(int,int,java.util.List,int,double,double)"},{"p":"neural_network.components","c":"Network","l":"Network(int, int, List<Integer>, int, double, double, boolean, boolean, double, boolean)","u":"%3Cinit%3E(int,int,java.util.List,int,double,double,boolean,boolean,double,boolean)"},{"p":"neural_network.components","c":"Neuron","l":"Neuron(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"neural_network.data_generators","c":"NormalDataGenerator","l":"NormalDataGenerator(Method, int, List<Double>, List<Double>)","u":"%3Cinit%3E(java.lang.reflect.Method,int,java.util.List,java.util.List)"},{"p":"neural_network.functions","c":"Softmax","l":"normalise(List<Double>)","u":"normalise(java.util.List)"},{"p":"neural_network.util","c":"Partitioner","l":"Partitioner(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"neural_network.components","c":"Neuron","l":"setBias(double)"},{"p":"neural_network.util","c":"DataSplitter","l":"setCsvFormat(CSVFormat)","u":"setCsvFormat(org.apache.commons.csv.CSVFormat)"},{"p":"neural_network.components","c":"Edge","l":"setDelta(double)"},{"p":"neural_network.util","c":"Header","l":"setDimensions(int)"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"setPrinter(CSVPrinter)","u":"setPrinter(org.apache.commons.csv.CSVPrinter)"},{"p":"neural_network.components","c":"Edge","l":"setRandom(Random)","u":"setRandom(java.util.Random)"},{"p":"neural_network.components","c":"Network","l":"setRandom(Random)","u":"setRandom(java.util.Random)"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"setRandom(Random)","u":"setRandom(java.util.Random)"},{"p":"neural_network.util","c":"Partitioner","l":"setRandom(Random)","u":"setRandom(java.util.Random)"},{"p":"neural_network.components","c":"Neuron","l":"setValue(double)"},{"p":"neural_network.components","c":"Edge","l":"setVelocity(double)"},{"p":"neural_network.components","c":"Edge","l":"setWeight(double)"},{"p":"neural_network.functions","c":"Sigmoid","l":"Sigmoid()","u":"%3Cinit%3E()"},{"p":"neural_network.components","c":"Layer","l":"size()"},{"p":"neural_network.functions","c":"Softmax","l":"Softmax()","u":"%3Cinit%3E()"},{"p":"neural_network.util","c":"DataSplitter","l":"split()"},{"p":"neural_network.components","c":"Network","l":"storeGradientOfLoss(Edge, double, boolean)","u":"storeGradientOfLoss(neural_network.components.Edge,double,boolean)"},{"p":"neural_network.components","c":"Edge","l":"toString()"},{"p":"neural_network.components","c":"Layer","l":"toString()"},{"p":"neural_network.components","c":"Neuron","l":"toString()"},{"p":"neural_network.util","c":"Header","l":"toString()"},{"p":"neural_network.functions","c":"TransferFunction","l":"TransferFunction()","u":"%3Cinit%3E()"},{"p":"neural_network.data_generators","c":"UniformDataGenerator","l":"UniformDataGenerator(Method, int, List<Double>, List<Double>)","u":"%3Cinit%3E(java.lang.reflect.Method,int,java.util.List,java.util.List)"},{"p":"neural_network.util","c":"Header","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"neural_network.util","c":"Header","l":"values()"},{"p":"neural_network.util","c":"WeightedPartitioner","l":"WeightedPartitioner(int, int, List<Double>)","u":"%3Cinit%3E(int,int,java.util.List)"},{"p":"neural_network.util","c":"WeightedPartitioner","l":"WeightedPartitioner(int, int, List<Double>, boolean, int)","u":"%3Cinit%3E(int,int,java.util.List,boolean,int)"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"writeToCsv(String)","u":"writeToCsv(java.lang.String)"},{"p":"neural_network.data_generators","c":"DataGenerator","l":"writeToCsv(String, String)","u":"writeToCsv(java.lang.String,java.lang.String)"},{"p":"neural_network.util","c":"Header","l":"X_1"},{"p":"neural_network.util","c":"Header","l":"X_2"},{"p":"neural_network.util","c":"Header","l":"X_3"},{"p":"neural_network.util","c":"Header","l":"X_4"},{"p":"neural_network.util","c":"Header","l":"X_5"},{"p":"neural_network.util","c":"Header","l":"X_6"},{"p":"neural_network.util","c":"Header","l":"X_7"},{"p":"neural_network.util","c":"Header","l":"X_8"},{"p":"neural_network.util","c":"Header","l":"X_9"},{"p":"neural_network.util","c":"Header","l":"Y"},{"p":"neural_network.util","c":"Header","l":"Y_HAT"}];updateSearchResults();